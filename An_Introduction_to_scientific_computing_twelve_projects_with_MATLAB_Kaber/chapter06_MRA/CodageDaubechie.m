function DJ=CodageDaubechie(J,CJ)
DJ=CJ;
C0=(1+sqrt(3))/(4*sqrt(2));
C1=(3+sqrt(3))/(4*sqrt(2));
C2=(3-sqrt(3))/(4*sqrt(2));
C3=(1-sqrt(3))/(4*sqrt(2));

%analysis
if size(CJ,1)<size(CJ,2)
    for j=J-1:-1:0
        DJ(1:2^j)=C0*[CJ(2^(j+1)),CJ(2:2:2^(j+1)-2)]...
            +C1*CJ(1:2:2^(j+1))...
            +C2*CJ(2:2:2^(j+1))...
            +C3*[CJ(3:2:2^(j+1)),CJ(1)];

        DJ(2^j+1:2^(j+1))=C3*[CJ(2^(j+1)),CJ(2:2:2^(j+1)-2)]...
            -C2*CJ(1:2:2^(j+1))...
            +C1*CJ(2:2:2^(j+1))...
            -C0*[CJ(3:2:2^(j+1)),CJ(1)];
        CJ=DJ;
    end
else
    for j=J-1:-1:0
        DJ(1:2^j)=C0*[CJ(2^(j+1));CJ(2:2:2^(j+1)-2)]...
            +C1*CJ(1:2:2^(j+1))...
            +C2*CJ(2:2:2^(j+1))...
            +C3*[CJ(3:2:2^(j+1));CJ(1)];

        DJ(2^j+1:2^(j+1))=C3*[CJ(2^(j+1));CJ(2:2:2^(j+1)-2)]...
            -C2*CJ(1:2:2^(j+1))...
            +C1*CJ(2:2:2^(j+1))...
            -C0*[CJ(3:2:2^(j+1));CJ(1)];
        CJ=DJ;
    end
end
